addressLength =
    addressLength3
  | addressLength2
  | addressLength1

addressLength1 =
    REAL CM
  | REAL
  | FREEVARIABLE
  | previousLength
  | LENGTH addressLineSegment
  | addressLineSegment

addressLength2 =
    GREATERTHAN addressLength1
  | LESSTHAN addressLength1
  | TWICE addressLength1
  | THRICE addressLength1
  | REAL TIMES addressLength1
  | HALF addressLength1
  | operation addressLength1 addressLength1

addressLength3 =
    GREATERTHAN addressLength2
  | LESSTHAN addressLength2
  | TWICE addressLength2
  | THRICE addressLength2
  | REAL TIMES addressLength2
  | HALF addressLength2
  | operation addressLength2 addressLength2

addressDegree =
    addressDegree3
  | addressDegree2
  | addressDegree1

addressDegree1 =
    REAL DEGREES
  | REAL
  | FREEVARIABLE
  | previousDegree
  | addressAngle

addressDegree2 =
    GREATERTHAN addressDegree1
  | LESSTHAN addressDegree1
  | TWICE addressDegree1
  | THRICE addressDegree1
  | REAL TIMES addressDegree1
  | HALF addressDegree1
  | operation addressDegree1 addressDegree1

addressDegree3 =
    GREATERTHAN addressDegree2
  | LESSTHAN addressDegree2
  | TWICE addressDegree2
  | THRICE addressDegree2
  | REAL TIMES addressDegree2
  | HALF addressDegree2
  | operation addressDegree2 addressDegree2

TIMES =
    'times'

HALF =
    'half'

GREATERTHAN =
    'greater' 'than'

LESSTHAN =
    'less' 'than'

commands =
    commands command
  | command

command =
    constructCommand
  | markCommand 
  | cutCommand
  | joinCommand
  | divideCommand
  | bisectCommand

constructCommand = 
  CONSTRUCT constructibleAndProperties

CONSTRUCT =
    'construct'
  | 'draw'

constructibleAndProperties = 
    lineSegmentAndProperties
  | lineAndProperties
  | arcAndProperties
  | arcsAndProperties
  | circleAndProperties
  | angleAndProperties
  | rayAndProperties
  | perpendicularBisectorAndProperties
  | bisectorAndProperties
  | perpendicularAndProperties
  | chordAndProperties
  | parallelAndProperties

lineSegmentAndProperties = 
    LINESEGMENT addressLineSegment GIVENTHAT conditions
  | LINESEGMENT addressLineSegment lineSegmentProperties
  | LINESEGMENT addressLineSegment perpendicularToClause perpendicularConditionClause
  | LINESEGMENT addressLineSegment parallelToClause parallelConditionClause
  | LINESEGMENT GIVENTHAT conditions
  | LINESEGMENT lineSegmentProperties
  | LINESEGMENT perpendicularToClause perpendicularConditionClause
  | LINESEGMENT parallelToClause parallelConditionClause
  | addressLineSegment GIVENTHAT conditions
  | addressLineSegment lineSegmentProperties
  | addressLineSegment perpendicularToClause perpendicularConditionClause
  | addressLineSegment parallelToClause parallelConditionClause

conditions =
    condition

condition =
    EQUALS LENGTH addressLineSegment addressLength
  | EQUALS addressLineSegment addressLength
  | EQUALS addressAngle addressAngle

GIVENTHAT =
    'given' 'that'
  | 'given'

LINESEGMENT =
  'line' 'segment'

POINTPAIR =
  [A-Z][A-Z]

lineSegmentProperties = 
    LENGTH addressLength
  | addressLength

LENGTH =
  'length'

CM =
  'cm'

addressLineSegment =
    LINESEGMENT POINTPAIR
  | POINTPAIR
  | adjectivePrevious LINESEGMENT
  | adjectiveFree LINESEGMENT

angleAndProperties =
    genericAngleAndProperties
  | rightAngleAndProperties

genericAngleAndProperties =
    ANGLE VERTEX addressPoint addressDegree
  | ANGLE addressAngle addressDegree
  | ANGLE addressDegree

rightAngleAndProperties =
    RIGHT ANGLE VERTEX addressPoint
  | RIGHT ANGLE addressAngle

RIGHT =
    'right'

VERTEX =
    'vertex'

ANGLE =
    'angle'

addressAngle =
    ANGLE POINTTRIPLET
  | POINTTRIPLET
  | adjectivePrevious ANGLE

DEGREES =
    'degree'
  | 'degrees'

circleAndProperties = 
    CIRCLE CENTER addressPoint RADIUS addressLength
  | CIRCLE CENTER addressPoint DIAMETER addressLength
  | CIRCLE RADIUS addressLength
  | CIRCLE DIAMETER addressLength

CIRCLE =
  'circle'

LINE =
    'line'

lineAndProperties = 
    LINE [a-z]
  | LINE [a-z] perpendicularToClause perpendicularConditionClause
  | LINE [a-z] parallelToClause parallelConditionClause

arcAndProperties =
  ARC arcProperties

arcsAndProperties =
  ARCS arcsProperties

ARC =
    'arc'

ARCS =
    'arcs'

arcsProperties =
    centersClause radiiClause mutualIntersectionClause
  | centersClause radiiClause

arcProperties =
    centerClause radiusClause intersectionClause
  | centerClause radiusClause
  | centerClause passingThroughClause

passingThroughClause =
    PASSINGTHROUGH addressPoint

PASSINGTHROUGH =
    'passing' 'through'
  | 'through'

mutualIntersectionClause =
    INTERSECTING EACHOTHER AT POINTSINGLET POINTSINGLET
  | INTERSECTING AT POINTSINGLET POINTSINGLET
  | INTERSECTING EACHOTHER AT POINTSINGLET
  | INTERSECTING AT POINTSINGLET

centerClause =
    CENTER POINTSINGLET

centersClause =
    CENTERS POINTSINGLET POINTSINGLET

radiusClause =
    RADIUS addressLength

radiiClause =
    RADIUS addressLength addressLength

intersectionClause =
    INTERSECTING addressIntersectableObject AT POINTSINGLET POINTSINGLET
  | INTERSECTING addressIntersectableObject AT POINTSINGLET

addressIntersectableObject =
    addressLineSegment
  | addressLine
  | addressArc
  | addressCircle
  | addressAngleRays

addressAngleRays =
    RAYS ANGLE addressAngle

CENTER =
  'center'

POINTSINGLET =
  [A-Z]

RADIUS =
  'radius'

DIAMETER =
  'diameter'

REAL =
  [0-9]+(.[0-9]+)?

INTERSECTING =
    'intersecting'
  | 'cutting'
  | 'cut'
  | 'intersect'

EACHOTHER =
    'eachother'
  | 'each' 'other'

CENTERS =
    'centers'

AT =
    'at'

rayAndProperties =
    RAY POINTPAIR originClause
  | RAYS POINTPAIR POINTPAIR originClause
  | RAY POINTPAIR
  | RAYS POINTPAIR POINTPAIR

originClause =
    ORIGIN addressPoint

ORIGIN =
    'origin'
  | 'initial' 'point'

RAY =
    'ray'

RAYS =
    'rays'

perpendicularBisectorAndProperties =
    PERPENDICULARBISECTOR addressPerpendicularBisectableObjects
  | PERPENDICULARBISECTORS addressPerpendicularBisectableObjects addressPerpendicularBisectableObjects
  | PERPENDICULARBISECTOR addressIndefinitePreviousObjects
  | PERPENDICULARBISECTORS addressIndefinitePreviousObjects

addressPerpendicularBisectableObjects =
    addressLineSegment
  | addressLine
  | addressChord
  | addressChords

addressChord =
    adjectivePrevious CHORD

addressChords =
    adjectivePrevious CHORDS

PERPENDICULARBISECTOR =
    'perpendicular' 'bisector'

bisectorAndProperties =
    BISECTOR addressLineSegment
  | BISECTOR addressAngle
  | BISECTOR addressIndefinitePreviousObjects

parallelToClause =
    PARALLEL addressLineSegment
  | PARALLEL addressLine

perpendicularToClause =
    PERPENDICULAR addressLineSegment
    PERPENDICULAR addressLine

perpendicularAndProperties =
    perpendicularToClause perpendicularConditionClause

PERPENDICULAR =
    'perpendicular'
  | 'orthogonal'

perpendicularConditionClause =
    AT addressPoint
  | passingThroughClause

chordAndProperties =
    CHORD addressCircle
  | CHORD addressCircle distanceFromCenterClause
  | CHORDS addressCircle numChords
  | CHORD addressIndefinitePreviousObjects
  | CHORD addressIndefinitePreviousObjects distanceFromCenterClause
  | CHORDS addressIndefinitePreviousObjects numChords

distanceFromCenterClause =
    DISTANCE addressLength FROM CENTER

DISTANCE =
    'distance'

numChords =
    [0-9]+

PARALLEL =
    'parallel'

parallelAndProperties =
    parallelToClause parallelConditionClause

parallelConditionClause =
    AT addressPoint
  | passingThroughClause

divideCommand =
    DIVIDE divisibleAndProperties

DIVIDE =
    'divide'

divisibleAndProperties =
    divisibleObject INTO [0-9]+ PARTS

PARTS =
  'parts'

INTO =
  'into'

divisibleObject =
    addressLineSegment
  | addressIndefinitePreviousObjects

joinCommand = 
  JOIN addressPointPairs

JOIN =
  'join'

addressPointPairs = 
    POINTPAIR
  | POINTPAIR POINTPAIR
  | POINTPAIR POINTPAIR POINTPAIR
  | adjectivePrevious POINTS

POINTTRIPLET =
  [A-Z][A-Z][A-Z]

markCommand =
    MARK markableAndProperties

MARK = 
    'mark'
  | 'draw'
  | 'label'

markableAndProperties =
    intersectionPointsAndProperties
  | pointAndProperties
  | angleArmPointsAndProperties

angleArmPointsAndProperties =
    POINT POINTSINGLET ON ARM addressAngle POINTSINGLET ON ARM addressAngle

ARM =
  'arm'

intersectionPointsAndProperties = 
    INTERSECTIONPOINTS addressIntersectingObject addressIntersectingObject addressPoint addressPoint
  | INTERSECTIONPOINTS addressIntersectingObject addressIntersectingObject addressPoint
  | INTERSECTIONPOINTS addressIntersectablePreviousObjects addressPoint addressPoint  
  | INTERSECTIONPOINTS addressIntersectablePreviousObjects addressPoint

INTERSECTIONPOINTS =
    'intersection' 'points'
  | 'intersection' 'point'
  | 'intersection'
  | 'intersections'

addressIntersectingObject = 
    addressArc
  | addressCircle
  | addressLine
  | addressLineSegment
  | addressPreviousObjects

pointAndProperties = 
    addressPoint pointAndPropertiesNotOnCase
  | addressPoint pointAndPropertiesOnCase markConditionClause
  | addressPoint pointAndPropertiesOnCase
  | addressPoint

markConditionClause =
    DISTANCEFROM addressPoint addressLength

DISTANCEFROM =
    'distance' 'from'

pointAndPropertiesOnCase =
    ON labelable

pointAndPropertiesNotOnCase =
    NOTON labelable

ON =
  'on'

NOTON =
    'not' 'on'
  | 'outside'

labelable =
    addressLineSegment
  | addressArc
  | addressPreviousObjects
  | addressLine

addressLine =
    [a-z]
  | LINE [a-z]
  | adjectivePrevious LINE
  | adjectiveFree LINE

addressArc =
  | adjectivePrevious ARC
  | adjectivePrevious ARCS

adjectivePrevious =
    THIS
  | THESE
  | PREVIOUS
  | THOSE

addressIntersectablePreviousObjects =
    THIS intersectableObject
  | THESE intersectableObjects
  | PREVIOUS intersectableObject
  | PREVIOUS intersectableObjects
  | THOSE intersectableObjects
  | addressIndefinitePreviousObjects

addressPreviousObjects =
    THIS object
  | THESE objects
  | PREVIOUS object
  | PREVIOUS objects
  | THOSE objects
  | addressIndefinitePreviousObjects

addressIndefinitePreviousObjects =
    THIS
  | THESE
  | IT
  | ITS
  | THEM
  | THOSE
  | THEIR

THEIR =
    'their'

ITS =
    'its'

THIS =
  'this'

THESE =
    'these'

PREVIOUS =
  'previous'

IT =
  'it'

THEM =
  'them'

THOSE =
  'those'

intersectableObject =
    LINESEGMENT
  | LINE
  | CIRCLE
  | ARC
  | PERPENDICULARBISECTOR
  | BISECTOR
  | CHORD
  | RAY

object = 
    intersectableObject
  | POINT

intersectableObjects =
    LINESEGMENTS
  | LINES
  | CIRCLES
  | ARCS
  | PERPENDICULARBISECTORS
  | BISECTORS
  | CHORDS
  | RAYS

LINESEGMENTS =
    'line' 'segments'

LINES =
    'lines'

CIRCLES =
    'circles'

PERPENDICULARBISECTORS =
    'perpendicular' 'bisectors'

BISECTORS =
    'bisectors'

CHORDS =
    'chords'

CHORD =
    'chord'

objects =
    intersectableObjects
  | POINTS

BISECTOR =
    'bisector'

cutCommand =
  CUT cuttableAndProperties

CUT =
  'cut'

addressPoint =
    POINTSINGLET
  | POINT POINTSINGLET
  | adjectivePrevious POINT
  | adjectiveFree POINT

adjectiveFree =
    ANY

ANY =
    'any'
  | 'one'

POINT =
    'point'

POINTS =
    'points'

cuttableAndProperties =
    addressLineSegment addressLength fromClause
  | addressLineSegment conditions
  | addressLine atPoints
  | addressArc atPoints
  | addressCircle atPoints

atPoints =
    AT addressPoint
  | AT addressPoint addressPoint

fromClause =
    FROM addressLineSegment
  | FROM addressLine
  | FROM addressPreviousObjects

addressCircle = 
    CIRCLE AT POINTSINGLET
  | CIRCLE CENTER POINTSINGLET
  | adjectivePrevious CIRCLE
  | adjectiveFree CIRCLE

FROM =
  'from'

TWICE =
  'twice'

THRICE =
  'thrice'

EQUALS =
    'equals'
  | 'equal'
  | 'is'
  | 'has'

previousLength =
    'same'
    'previous'

previousDegree =
    'same'

operation =
    DIFFERENCE
  | SUM

DIFFERENCE =
    'minus'
  | 'difference'

SUM =
    'sum'

FREEVARIABLE =
    'any'
  | 'convenient'

bisectCommand =
    BISECT bisectableAndProperties

BISECT =
    'bisect'

bisectableAndProperties =
    addressLineSegment
  | addressAngle
  | addressIndefinitePreviousObjects
